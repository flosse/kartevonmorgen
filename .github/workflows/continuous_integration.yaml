name: Continuous integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          sudo apt-get install libssl-dev

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          profile: minimal
          components: rustfmt, clippy

      - name: Cache Cargo build artefacts
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ github.head_ref }}-${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ github.head_ref }}
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo

      - name: Check kern module
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path kern/Cargo.toml

      - name: Test kern module
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path kern/Cargo.toml

      - name: Check kern code formatting
        id: fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path kern/Cargo.toml --all -- --check

      - name: Check kern module for linter warnings
        id: clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path kern/Cargo.toml -- -D warnings
